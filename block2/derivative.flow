import mtk_labs/block2/exps;

export {
    derivative(tree : flow) -> flow;
}

isVar(e : flow) -> bool;

derivative(tree : flow) -> flow {
    switch(tree){
        Int(e): Int(0);
        Double(e): Int(0);
        Var(e): Int(1);
        
        Ln(e): Mul(Div(Int(1), e), derivative(e));
        Neg(e): Neg(derivative(e));
        Sum(e1, e2): Sum(derivative(e1), derivative(e2));
        Sub(e1, e2): Sub(derivative(e1), derivative(e2));
        Mul(e1, e2): {
            de1 = derivative(e1);
            de2 = derivative(e2);
            Sum(Mul(de1, e2), Mul(e1, de2));
        }
        Div(e1, e2): {
            de1 = derivative(e1);
            de2 = derivative(e2);
            Div(Sub(Mul(de1, e2),Mul(e1, de2)), Pow(e2, Int(2)));
        }
        Pow(u, v): {
            du = derivative(u);
            dv = derivative(v);
            if(isVar(v)){
                Mul(Mul(dv, Ln(u)), Pow(u, v));
            } else{
                Mul(Mul(v, du), Pow(u, Sub(v, Int(1))));
            }
        } 
    }
}

isVar(e : flow) -> bool {
    switch(e){
        Var(e1): true;
        default: false;
    }
}